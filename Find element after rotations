# Basics-of-Programming-Java-Programming

//////////********************///////////////////////////


Find element after rotations
easy
Time Limit: 2 sec
Memory Limit: 128000 kB
Problem Statement
Given an array of N integers,. There are several right circular rotations of range [L. R] that you need to perform. After performing these rotations, you need to find element at a given index X.
Input
First line of input contains size of array N and the given index X.
The second line of input contains N space separated integers.
The third line contains number of ranges M for right circular rotations, next M lines contains two space space separated integers containing values of Li Ri.

Constrains:-
1 < = X < = N < = 100000
1 < = A[i] < = 100000
1 < = M < = 100000
1 < = L < = R < = N
Output
Print the element present at the given X.
Example
Sample Input:-
5 2
1 2 3 4 5
2
1 3
1 4

Sample Output:-
3

Explanation:-
After first given rotation (1 3)
arr[] = {3, 1, 2, 4, 5}
After second rotation (1, 4)
arr[] = {4, 3, 1, 2, 5}
After all rotations we have element 3 at given index 2.


////////////////*******************//////////////////






import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
                      // Your code here
                      Scanner sc = new Scanner(System.in);
                      int n = sc.nextInt();
                      int index = sc.nextInt();
                      index--;
                      int[] a= new int[n];
                      for(int i=0;i<n;i++)
                      {
                          a[i] = sc.nextInt();
                      }
                      int rotations = sc.nextInt();
                      int[][] ranges = new int[rotations][2];
                      for(int i=0;i<rotations;i++)
                      {
                          ranges[i][0] = sc.nextInt()-1;
                          ranges[i][1] = sc.nextInt()-1;
                      }
                      System.out.println(findElement(a,ranges,rotations,index));
    }
    static int findElement(int arr[], int ranges[][], int rotations, int index)
    {
        for(int i = rotations - 1;i>=0;i--)
        {
            int left = ranges[i][0];
            int right = ranges[i][1];

            if(left<=index && right >= index)
            {
                if(index==left)
                index = right;
                else index--;
            }
        }
        return arr[index];
    
    }
}


